grammar Parsers
  root <- regexp flags:""? <Root>
  regexp <- match:match alternates:""? <Regexp>
  match <- ""? parts:match_fragment* <Match>
  match_fragment <- "(" repeat:repeat? group? content:(element_regex / element_entity / element_wordset / terminal) ")" " "? <MatchFragment>
  element_regex <- "\\r{" [^}]+ "}"
  element_entity <- "\\e{" etype:[\d]+ "}" <Entity>
  element_wordset <- "$" [A-Z]+
  terminal <- literal <Literal>
  literal <- literal:[^()]+
  group <- ":[" [a-zA-Z]+ "]"
  repeat <- spec:( repeat_any / repeat_required / repeat_optional / repeat_spec ) <Repeat>
  repeat_any <- "*" <RepeatAny>
  repeat_required <- "+" <RepeatRequired>
  repeat_optional <- "?" <RepeatOptional>
  repeat_spec <- ( "{" min:[0-9]+ "," max:[0-9]+ "}"
                 / "{" min:[0-9]+ ",}"
                 / "{" exact:[0-9]+ "}" ) <RepeatSpec>
